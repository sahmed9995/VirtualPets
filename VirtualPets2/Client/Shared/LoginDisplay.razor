@using Microsoft.AspNetCore.Components.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using VirtualPets2.Shared.Models
@inject HttpClient http

@inject NavigationManager Navigation
@inject SignOutSessionStateManager SignOutManager

<AuthorizeView>
    <Authorized>
        @if (user == null)
        {
            <a href="authentication/profile">Hello, @context.User.Identity?.Name!</a>
        }
        else
        {
            //Shows UserEntity Nickname
            <a href="authentication/profile">Hello, @user.Nickname!</a>
        }
        
        <button class="nav-link btn btn-link" @onclick="BeginSignOut">Log out</button>
    </Authorized>
    <NotAuthorized>
        <a href="authentication/register">Register</a>
        <a href="authentication/login">Log in</a>
    </NotAuthorized>
</AuthorizeView>

@code{
    private async Task BeginSignOut(MouseEventArgs args)
    {
        await SignOutManager.SetSignOutState();
        Navigation.NavigateTo("authentication/logout");
    }

    public UserDetails user;

    protected override async Task OnInitializedAsync()
    {
        user = await http.GetFromJsonAsync<UserDetails>("/api/user");
    }
}
