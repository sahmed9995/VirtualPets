@page "/animal"
@using Microsoft.AspNetCore.Authorization
@using VirtualPets2.Shared.Models
@inject HttpClient http
@attribute [Authorize]
@inject NavigationManager navigation


<h3>Welcome to the Animal Adoption Agency</h3>

@if (user == null)
{
    <p><em>You have not made an account yet...</em></p>
    <p>Please make an account, to purchase animals</p>
    <a href=@("/user/create")>Click here to make an account</a>
}
else
{
    <h5>Search By:</h5>
    <div class="col mx-auto justify-content-between">

        <a href=@("animal/price")>Price</a>
        <a href=@("animal/dwelling")>Animal Habitat</a>
        <a href=@("animal/diet")>Animal Diet</a>

    </div>
    @foreach (var animal in animals)
    {
        if (animal.Type == "Feline")
        {
            Felines.Add(animal);
        }
        else if (animal.Type == "Ape")
        {
            Apes.Add(animal);
        }
        else if (animal.Type == "Mammal")
        {
            Mammals.Add(animal);
        }
        else if (animal.Type == "Bird")
        {
            Birds.Add(animal);
        }
        else if (animal.Type == "Reptile")
        {
            Reptiles.Add(animal);
        }
        else if (animal.Type == "Fish")
        {
            Fish.Add(animal);
        }
    }

    <div class="row mt-3">
        <h2>Felines</h2>
        <hr class="mb-3" />
        @foreach (var feline in Felines)
        {
            <div class="col-md-3 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title mb-3">@feline.Title.ToUpper()</h3>
                        <h6 class="card-text">Price: $@feline.Price</h6>
                        <a href=@($"animal/{feline.Id}")>Details</a>
                        <button type="button" class="btn btn-primary btn-sm" @onclick="()=>OpenBuyDialog(feline)">Buy</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row mt-3">
        <h2>Apes</h2>
        <hr class="mb-3" />
        @foreach (var ape in Apes)
        {
            <div class="col-md-3 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title mb-3">@ape.Title.ToUpper()</h3>
                        <h6 class="card-text">Price: $@ape.Price</h6>
                        <a href=@($"animal/{ape.Id}")>Details</a>
                        <button type="button" class="btn btn-primary btn-sm" @onclick="()=>OpenBuyDialog(ape)">Buy</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row mt-3">
        <h2>Mammals</h2>
        <hr class="mb-3" />
        @foreach (var mammal in Mammals)
        {
            <div class="col-md-3 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title mb-3">@mammal.Title.ToUpper()</h3>
                        <h6 class="card-text">Price: $@mammal.Price</h6>
                        <a href=@($"animal/{mammal.Id}")>Details</a>
                        <button type="button" class="btn btn-primary btn-sm" @onclick="()=>OpenBuyDialog(mammal)">Buy</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row mt-3">
        <h2>Reptiles</h2>
        <hr class="mb-3" />
        @foreach (var reptile in Reptiles)
        {
            <div class="col-md-3 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title mb-3">@reptile.Title.ToUpper()</h3>
                        <h6 class="card-text">Price: $@reptile.Price</h6>
                        <a href=@($"animal/{reptile.Id}")>Details</a>
                        <button type="button" class="btn btn-primary btn-sm" @onclick="()=>OpenBuyDialog(reptile)">Buy</button>
                    </div>
                </div>
            </div>
        }
    </div>
    <div class="row mt-3">
        <h2>Birds</h2>
        <hr class="mb-3" />
        @foreach (var bird in Birds)
        {
            <div class="col-md-3 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title mb-3">@bird.Title.ToUpper()</h3>
                        <h6 class="card-text">Price: $@bird.Price</h6>
                        <a href=@($"animal/{bird.Id}")>Details</a>
                        <button type="button" class="btn btn-primary btn-sm" @onclick="()=>OpenBuyDialog(bird)">Buy</button>
                    </div>
                </div>
            </div>
        }
    </div>

    <div class="row mt-3">
        <h3>Fish</h3>
        <hr class="mb-3" />
        @foreach (var fish in Fish)
        {
            <div class="col-md-3 mb-2">
                <div class="card">
                    <div class="card-body">
                        <h3 class="card-title mb-3">@fish.Title.ToUpper()</h3>
                        <h6 class="card-text">Price: $@fish.Price</h6>
                        <a href=@($"animal/{fish.Id}")>Details</a>
                        <button type="button" class="btn btn-primary btn-sm" @onclick="()=>OpenBuyDialog(fish)">Buy</button>
                    </div>
                </div>
            </div>
        }
    </div>

    @if (CannotBuyDialog)
    {
        <div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">You cannot buy this animal</h4>
                        <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                    </div>
                    <div class="modal-body">
                        <p>Sorry, it looks like you have already bought this animal!</p>
                    </div>
                    <div class="modal-footer">
                        <a href=@("/animal")>Click here to go buy another animal</a>
                    </div>
                </div>
            </div>
        </div>
    }
     

    @if (BuyDialogOpenFail)
    {
        <BuyModal Title="Better Luck Next Time" Text="Sorry, it looks like you don't have enough money to buy this animal!"></BuyModal>
    }

    if (NameDialog)
    {
        <div class="modal fade show" id="myModal" style="display:block; background-color: rgba(10,10,10,.8);" aria-modal="true" role="dialog">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <h4 class="modal-title">Animal Name</h4>
                        <button type="button" class="close" @onclick="@ModalCancel">&times;</button>
                    </div>
                    <div class="modal-body">
                        <div class="container">
                            <EditForm Model="@model" OnValidSubmit="@HandleSubmit">
                                <DataAnnotationsValidator />
                                <ValidationSummary />
                                <div class="form-group">
                                    <label>Choose a name for your new pet:</label>
                                    <InputText class="form-control" @bind-Value="name.Name" />
                                </div>
                                <button type="submit" class="btn btn-primary btn-block mt-5">Submit</button>
                            </EditForm>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }

}



@code {
    public UserDetails user;
    public List<AnimalListItem> animals;
    public UserAnimalCreate model = new();
    public UserMoney userMoney = new();
    public AnimalEdit name = new();
    public List<UserAnimalDetails> userAnimals;

    public List<AnimalListItem> Felines = new List<AnimalListItem>();
    public List<AnimalListItem> Mammals = new List<AnimalListItem>();
    public List<AnimalListItem> Apes = new List<AnimalListItem>();
    public List<AnimalListItem> Reptiles = new List<AnimalListItem>();
    public List<AnimalListItem> Birds = new List<AnimalListItem>();
    public List<AnimalListItem> Fish = new List<AnimalListItem>();


    private AnimalListItem _animalToBuy;

    public bool BuyDialogOpenFail { get; set; }
    public bool NameDialog { get; set; }
    public bool CannotBuyDialog { get; set; }

    private async Task OpenBuyDialog(AnimalListItem aniUser)
    {
        _animalToBuy = aniUser;

        foreach (var animal in userAnimals)
        {
            if ( animal.AnimalId == _animalToBuy.Id)
            {
                CannotBuyDialog = true;
            }
        }

        if (user.Money < _animalToBuy.Price)
        {
            BuyDialogOpenFail = true;
        }
        else if (CannotBuyDialog == true)
        {
            navigation.NavigateTo("/animal");
        }
        else
        {
            var response = await http.PostAsJsonAsync($"/api/animal/{_animalToBuy.Id}/buy/{user.Id}", model);

            if (response.IsSuccessStatusCode)
            {
                NameDialog = true;

                var updated = await http.PutAsJsonAsync($"/api/animal/{user.Id}/buy/{_animalToBuy.Id}", userMoney);

                if (!updated.IsSuccessStatusCode)
                {
                    BuyDialogOpenFail = true;
                }
            }
        }
    }

    private async void HandleSubmit()
    {
        var changed = await http.PutAsJsonAsync($"/api/animal/{_animalToBuy.Id}/name", name);

        if (changed.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/user");
        }
        else
        {
            BuyDialogOpenFail = true;
        }

    }

    [Parameter]
    public EventCallback<bool> OnClose { get; set; }

    private Task ModalCancel()
    {
        return OnClose.InvokeAsync(false);
    }


    protected override async Task OnInitializedAsync()
    {
        user = await http.GetFromJsonAsync<UserDetails>("/api/user");
        animals = await http.GetFromJsonAsync<List<AnimalListItem>>("/api/animal");
        userAnimals = await http.GetFromJsonAsync<List<UserAnimalDetails>>($"/api/animal/{user.Id}/Ids");
    }
}
