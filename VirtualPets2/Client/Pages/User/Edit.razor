@page "/user/edit/{userId:int}"
@using VirtualPets2.Shared.Models
@using Microsoft.AspNetCore.Authorization
@inject HttpClient http
@inject NavigationManager navigation
@attribute [Authorize]

@*This page comes up when you choose to update your account*@

<h3>Edit your Account!</h3>

@if (errorMessage != null)
{
    <h5 class="text-danger">@errorMessage</h5>
}

<div class="container">
    <EditForm Model="@model">
        <div class="form-group">
            <label>Username: (You have to put something)</label>
            <InputText class="form-control" @bind-Value="model.Username" />
        </div>
        <div class="form-group">
            <label>Password: (You have to put something)</label>
            <InputText class="form-control" @bind-Value="model.Password" />
        </div>
        <div class="form-group">
            <label>Nickname: (You have to put something)</label>
            <InputText class="form-control" @bind-Value="model.Nickname" />
        </div>
        <button type="submit" class="btn btn-primary btn-block mt-5" @onclick="() => HandleSubmit()">Submit</button>
    </EditForm>
</div>

@code {
    [Parameter]
    public int userId { get; set; }
    private UserEdit model = new();
    private string errorMessage;

    protected override async Task OnInitializedAsync()
    {
        model = await http.GetFromJsonAsync<UserEdit>($"/api/user/{userId}");
    }


    //Method that updates details in UserEntity, if updated successfully it reroutes to the profile index page
    private async void HandleSubmit()
    {
        var createRes = await http.PutAsJsonAsync<UserEdit>($"/api/user/edit/{userId}", model);

        if (createRes.IsSuccessStatusCode)
        {
            navigation.NavigateTo("/user");
        }
        else
        {
            errorMessage = "Could not edit your note right now. Please try again later.";
        }
    }
}