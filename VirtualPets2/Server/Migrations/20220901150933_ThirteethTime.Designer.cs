// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualPets2.Server.Data;

#nullable disable

namespace VirtualPets2.Server.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20220901150933_ThirteethTime")]
    partial class ThirteethTime
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.DeviceFlowCodes", b =>
                {
                    b.Property<string>("UserCode")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("DeviceCode")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("UserCode");

                    b.HasIndex("DeviceCode")
                        .IsUnique();

                    b.HasIndex("Expiration");

                    b.ToTable("DeviceCodes", (string)null);
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.Key", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Algorithm")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("Created")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("DataProtected")
                        .HasColumnType("bit");

                    b.Property<bool>("IsX509Certificate")
                        .HasColumnType("bit");

                    b.Property<string>("Use")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Use");

                    b.ToTable("Keys");
                });

            modelBuilder.Entity("Duende.IdentityServer.EntityFramework.Entities.PersistedGrant", b =>
                {
                    b.Property<string>("Key")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("ConsumedTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("CreationTime")
                        .HasColumnType("datetime2");

                    b.Property<string>("Data")
                        .IsRequired()
                        .HasMaxLength(50000)
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime?>("Expiration")
                        .HasColumnType("datetime2");

                    b.Property<string>("SessionId")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SubjectId")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Key");

                    b.HasIndex("ConsumedTime");

                    b.HasIndex("Expiration");

                    b.HasIndex("SubjectId", "ClientId", "Type");

                    b.HasIndex("SubjectId", "SessionId", "Type");

                    b.ToTable("PersistedGrants", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderKey")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Name")
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.AnimalEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Diet")
                        .HasColumnType("int");

                    b.Property<string>("Dwelling")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FoodId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int?>("ServiceId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Animals");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Diet = 0,
                            Dwelling = "Desert/Forest",
                            Price = 650.45000000000005,
                            Title = "Lion",
                            Type = "Feline"
                        },
                        new
                        {
                            Id = 2,
                            Diet = 0,
                            Dwelling = "Forest/Grasslands",
                            Price = 670.45000000000005,
                            Title = "Tiger",
                            Type = "Feline"
                        },
                        new
                        {
                            Id = 3,
                            Diet = 0,
                            Dwelling = "Desert",
                            Price = 630.45000000000005,
                            Title = "Cheetah",
                            Type = "Feline"
                        },
                        new
                        {
                            Id = 4,
                            Diet = 0,
                            Dwelling = "Forest/Grasslands",
                            Price = 650.45000000000005,
                            Title = "Leopard",
                            Type = "Feline"
                        },
                        new
                        {
                            Id = 5,
                            Diet = 0,
                            Dwelling = "Forest/Grasslands",
                            Price = 650.45000000000005,
                            Title = "Jaguar",
                            Type = "Feline"
                        },
                        new
                        {
                            Id = 6,
                            Diet = 1,
                            Dwelling = "Savannah",
                            Price = 550.45000000000005,
                            Title = "Hippopotamus",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 7,
                            Diet = 0,
                            Dwelling = "Tundra",
                            Price = 850.45000000000005,
                            Title = "Polar Bear",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 8,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 450.44999999999999,
                            Title = "Gorilla",
                            Type = "Ape"
                        },
                        new
                        {
                            Id = 9,
                            Diet = 0,
                            Dwelling = "Tundra",
                            Price = 350.44999999999999,
                            Title = "Seal",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 10,
                            Diet = 0,
                            Dwelling = "Marshes/Lakes",
                            Price = 650.45000000000005,
                            Title = "Otter",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 11,
                            Diet = 1,
                            Dwelling = "Desert/Grasslands",
                            Price = 150.44999999999999,
                            Title = "Warthog",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 12,
                            Diet = 1,
                            Dwelling = "Desert",
                            Price = 250.44999999999999,
                            Title = "Meerkat",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 13,
                            Diet = 0,
                            Dwelling = "Grasslands/Forest/Savannahs",
                            Price = 450.44999999999999,
                            Title = "Hyena",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 14,
                            Diet = 1,
                            Dwelling = "Grasslands/Forest/Savannahs/Desert",
                            Price = 1650.45,
                            Title = "Elephant",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 15,
                            Diet = 0,
                            Dwelling = "Ocean",
                            Price = 2500.54,
                            Title = "Blue Whale",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 16,
                            Diet = 1,
                            Dwelling = "Desert/Savannahs/Grasslands",
                            Price = 850.45000000000005,
                            Title = "Rhinocerous",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 17,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 350.44999999999999,
                            Title = "Chimpanzee",
                            Type = "Ape"
                        },
                        new
                        {
                            Id = 18,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 950.45000000000005,
                            Title = "Orangutan",
                            Type = "Ape"
                        },
                        new
                        {
                            Id = 19,
                            Diet = 0,
                            Dwelling = "Desert/Forest/Grasslands",
                            Price = 390.44999999999999,
                            Title = "Fox",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 20,
                            Diet = 0,
                            Dwelling = "Desert/Forest/Grasslands",
                            Price = 620.45000000000005,
                            Title = "Wolf",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 21,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 550.45000000000005,
                            Title = "Red Panda",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 22,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 550.45000000000005,
                            Title = "Panda",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 23,
                            Diet = 0,
                            Dwelling = "Forest/Prairie",
                            Price = 850.45000000000005,
                            Title = "Grizzly Bear",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 24,
                            Diet = 1,
                            Dwelling = "Desert/Savannah",
                            Price = 530.45000000000005,
                            Title = "Ostrich",
                            Type = "Bird"
                        },
                        new
                        {
                            Id = 25,
                            Diet = 0,
                            Dwelling = "Tundra",
                            Price = 350.44999999999999,
                            Title = "Penguin",
                            Type = "Bird"
                        },
                        new
                        {
                            Id = 26,
                            Diet = 0,
                            Dwelling = "Ocean",
                            Price = 850.45000000000005,
                            Title = "Great White Shark",
                            Type = "Fish"
                        },
                        new
                        {
                            Id = 27,
                            Diet = 0,
                            Dwelling = "Ocean",
                            Price = 950.45000000000005,
                            Title = "Orca/Killer Whale",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 28,
                            Diet = 0,
                            Dwelling = "Forest/Grasslands",
                            Price = 750.45000000000005,
                            Title = "Pangolin",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 29,
                            Diet = 0,
                            Dwelling = "Forest",
                            Price = 650.45000000000005,
                            Title = "Komodo Dragon",
                            Type = "Reptile"
                        },
                        new
                        {
                            Id = 30,
                            Diet = 0,
                            Dwelling = "Grasslands/Forest/Savannahs",
                            Price = 600.45000000000005,
                            Title = "Python",
                            Type = "Reptile"
                        },
                        new
                        {
                            Id = 31,
                            Diet = 0,
                            Dwelling = "Forest",
                            Price = 700.45000000000005,
                            Title = "Anaconda",
                            Type = "Reptile"
                        },
                        new
                        {
                            Id = 32,
                            Diet = 0,
                            Dwelling = "Savannah",
                            Price = 650.45000000000005,
                            Title = "Black Mamba",
                            Type = "Reptile"
                        },
                        new
                        {
                            Id = 33,
                            Diet = 0,
                            Dwelling = "Swamps",
                            Price = 800.45000000000005,
                            Title = "Crocodile",
                            Type = "Reptile"
                        },
                        new
                        {
                            Id = 34,
                            Diet = 0,
                            Dwelling = "Swamps",
                            Price = 800.45000000000005,
                            Title = "Alligator",
                            Type = "Reptile"
                        },
                        new
                        {
                            Id = 35,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 450.44999999999999,
                            Title = "Koala",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 36,
                            Diet = 1,
                            Dwelling = "Savannah",
                            Price = 550.45000000000005,
                            Title = "Lesser Kudu",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 37,
                            Diet = 1,
                            Dwelling = "Savannah/Grasslands",
                            Price = 530.45000000000005,
                            Title = "Zebra",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 38,
                            Diet = 1,
                            Dwelling = "Desert/Savannahs/Grasslands",
                            Price = 450.44999999999999,
                            Title = "Gazelle",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 39,
                            Diet = 1,
                            Dwelling = "Savannah",
                            Price = 500.44999999999999,
                            Title = "Wildebeest",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 40,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 600.45000000000005,
                            Title = "Okapi",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 41,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 650.45000000000005,
                            Title = "Moose",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 42,
                            Diet = 1,
                            Dwelling = "Savannah",
                            Price = 550.45000000000005,
                            Title = "Giraffe",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 43,
                            Diet = 1,
                            Dwelling = "Forest",
                            Price = 550.45000000000005,
                            Title = "Flying Squirrel",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 44,
                            Diet = 1,
                            Dwelling = "Grasslands/Forest/Savannahs",
                            Price = 950.45000000000005,
                            Title = "Buffalo",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 45,
                            Diet = 1,
                            Dwelling = "Tundra",
                            Price = 1000.45,
                            Title = "Yak",
                            Type = "Mammal"
                        },
                        new
                        {
                            Id = 46,
                            Diet = 0,
                            Dwelling = "Tundra",
                            Price = 750.45000000000005,
                            Title = "Snow Leopard",
                            Type = "Feline"
                        });
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.FoodEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Foods");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Ribeye Steak",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Leg of Lamb",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "Beef Shank",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "New York Style Cheesecake",
                            Price = 59,
                            Type = 2
                        },
                        new
                        {
                            Id = 5,
                            Name = "Deep Fried Oreos",
                            Price = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 6,
                            Name = "Freshly Baked Chocolate Chip Cookies",
                            Price = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 7,
                            Name = "Watermelon",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 8,
                            Name = "Honeydew",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Honey",
                            Price = 45,
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Name = "Bluefin Tuna",
                            Price = 425,
                            Type = 0
                        },
                        new
                        {
                            Id = 11,
                            Name = "Escargot",
                            Price = 121,
                            Type = 0
                        },
                        new
                        {
                            Id = 12,
                            Name = "Eucalyptus Leaves",
                            Price = 45,
                            Type = 1
                        },
                        new
                        {
                            Id = 13,
                            Name = "Bamboo Shoots",
                            Price = 59,
                            Type = 1
                        },
                        new
                        {
                            Id = 14,
                            Name = "Jumbo Shrimp",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 15,
                            Name = "Cotton Candy",
                            Price = 5,
                            Type = 2
                        },
                        new
                        {
                            Id = 16,
                            Name = "Rainbow Trout",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 17,
                            Name = "Bang Bang Shrimp",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 18,
                            Name = "Quail Egg",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 19,
                            Name = "Caterpillars",
                            Price = 5,
                            Type = 0
                        },
                        new
                        {
                            Id = 20,
                            Name = "Bird Seed",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 21,
                            Name = "Smoked Texan Brisket",
                            Price = 59,
                            Type = 0
                        },
                        new
                        {
                            Id = 22,
                            Name = "Zucchini",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 23,
                            Name = "Carrots",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 24,
                            Name = "Lettuce",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 25,
                            Name = "Wagyu Chunk",
                            Price = 425,
                            Type = 0
                        },
                        new
                        {
                            Id = 26,
                            Name = "Chocolate Fudge",
                            Price = 45,
                            Type = 2
                        },
                        new
                        {
                            Id = 27,
                            Name = "Apples",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 28,
                            Name = "Sweet Corn",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 29,
                            Name = "Sugar Snap Peas",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 30,
                            Name = "Deep Dish Pizza",
                            Price = 45,
                            Type = 1
                        },
                        new
                        {
                            Id = 31,
                            Name = "Grapes",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 32,
                            Name = "Spare Ribs",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 33,
                            Name = "Orange Chicken",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 34,
                            Name = "Green Bean Casserole",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 35,
                            Name = "Potato Salad",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 36,
                            Name = "Lobster Roll",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 37,
                            Name = "Seafood Gumbo",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 38,
                            Name = "Kimchi",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 39,
                            Name = "Chicken Fettucini Alfredo",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 40,
                            Name = "Chicken Fajitas",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 41,
                            Name = "Raw Whole Chicken",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 42,
                            Name = "Cheeseburger",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 43,
                            Name = "Ice Cream",
                            Price = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 44,
                            Name = "Nachos",
                            Price = 5,
                            Type = 0
                        },
                        new
                        {
                            Id = 45,
                            Name = "Chocolate Eclairs",
                            Price = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 46,
                            Name = "Donuts",
                            Price = 5,
                            Type = 2
                        },
                        new
                        {
                            Id = 47,
                            Name = "Red Velvet Cake",
                            Price = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 48,
                            Name = "Bananas",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 49,
                            Name = "Clementines",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 50,
                            Name = "Doritos",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 51,
                            Name = "Dill Pickles",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 52,
                            Name = "Mozzeralla Cheese Sticks",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 53,
                            Name = "Smoked Turkey Leg",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 54,
                            Name = "Cup of Soup Ramen",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 55,
                            Name = "Raspberries",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 56,
                            Name = "Blackberries",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 57,
                            Name = "Strawberries",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 58,
                            Name = "Blueberries",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 59,
                            Name = "Tripe",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 60,
                            Name = "Beef Liver",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 61,
                            Name = "Goat Heart",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 62,
                            Name = "Popeye's Chicken Sandwich",
                            Price = 5,
                            Type = 0
                        },
                        new
                        {
                            Id = 63,
                            Name = "Hershey's Chocolate Bar",
                            Price = 5,
                            Type = 2
                        },
                        new
                        {
                            Id = 64,
                            Name = "Strawberry Rhubarb Pie",
                            Price = 15,
                            Type = 2
                        },
                        new
                        {
                            Id = 65,
                            Name = "Funnel Cake",
                            Price = 5,
                            Type = 2
                        },
                        new
                        {
                            Id = 66,
                            Name = "Chicken Skewers",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 67,
                            Name = "Philly Cheesesteak",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 68,
                            Name = "Red Sockeye Salmon",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 69,
                            Name = "Ahi Tuna",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 70,
                            Name = "Deer Meat",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 71,
                            Name = "Spanokopita",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 72,
                            Name = "Shiitake Mushrooms",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 73,
                            Name = "Mussels",
                            Price = 59,
                            Type = 0
                        },
                        new
                        {
                            Id = 74,
                            Name = "Frog Legs",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 75,
                            Name = "Grass",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 76,
                            Name = "Hay",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 77,
                            Name = "Yams",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 78,
                            Name = "Walnuts",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 79,
                            Name = "Almonds",
                            Price = 5,
                            Type = 1
                        },
                        new
                        {
                            Id = 80,
                            Name = "Pistachios",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 81,
                            Name = "Avocado",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 82,
                            Name = "Jambalaya",
                            Price = 15,
                            Type = 0
                        },
                        new
                        {
                            Id = 83,
                            Name = "Star Fruit",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 84,
                            Name = "Croissant",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 85,
                            Name = "Figs",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 86,
                            Name = "Kumquats",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 87,
                            Name = "Mango",
                            Price = 15,
                            Type = 1
                        },
                        new
                        {
                            Id = 88,
                            Name = "Scallops",
                            Price = 45,
                            Type = 0
                        },
                        new
                        {
                            Id = 89,
                            Name = "Anchovies",
                            Price = 5,
                            Type = 0
                        },
                        new
                        {
                            Id = 90,
                            Name = "Nutella",
                            Price = 5,
                            Type = 2
                        });
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.ServiceEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("Money")
                        .HasColumnType("int");

                    b.Property<string>("Task")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Services");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Money = 45,
                            Task = "Bathe your pet"
                        },
                        new
                        {
                            Id = 2,
                            Money = 50,
                            Task = "Play with your pet"
                        },
                        new
                        {
                            Id = 3,
                            Money = 15,
                            Task = "Groom your pet"
                        },
                        new
                        {
                            Id = 4,
                            Money = 30,
                            Task = "Cuddle with your pet"
                        },
                        new
                        {
                            Id = 5,
                            Money = 25,
                            Task = "Take your pet on a walk"
                        },
                        new
                        {
                            Id = 6,
                            Money = 20,
                            Task = "Take your pet to the park"
                        },
                        new
                        {
                            Id = 7,
                            Money = 35,
                            Task = "Take your pet on a playdate"
                        },
                        new
                        {
                            Id = 8,
                            Money = 10,
                            Task = "Buy your pet clothes"
                        },
                        new
                        {
                            Id = 9,
                            Money = 5,
                            Task = "Give your pet scritches"
                        },
                        new
                        {
                            Id = 10,
                            Money = 40,
                            Task = "Give your pet treats"
                        },
                        new
                        {
                            Id = 11,
                            Money = 55,
                            Task = "Teach your pet a new trick"
                        },
                        new
                        {
                            Id = 12,
                            Money = 15,
                            Task = "Take your pet to the vet"
                        },
                        new
                        {
                            Id = 13,
                            Money = 30,
                            Task = "Give your pet a spa day"
                        });
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.UserAnimal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("UserId");

                    b.ToTable("UserAnimals");
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<double>("Money")
                        .HasColumnType("float");

                    b.Property<string>("Nickname")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.UserFood", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("FoodId")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodId");

                    b.HasIndex("UserId");

                    b.ToTable("UserFoods");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("VirtualPets2.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("VirtualPets2.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VirtualPets2.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("VirtualPets2.Server.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.AnimalEntity", b =>
                {
                    b.HasOne("VirtualPets2.Server.Models.UserEntity", "User")
                        .WithMany()
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.UserAnimal", b =>
                {
                    b.HasOne("VirtualPets2.Server.Models.AnimalEntity", "Animal")
                        .WithMany("UserAnimals")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VirtualPets2.Server.Models.UserEntity", "User")
                        .WithMany("UserAnimals")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.UserFood", b =>
                {
                    b.HasOne("VirtualPets2.Server.Models.FoodEntity", "Food")
                        .WithMany("UserFoods")
                        .HasForeignKey("FoodId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("VirtualPets2.Server.Models.UserEntity", "User")
                        .WithMany("UserFoods")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Food");

                    b.Navigation("User");
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.AnimalEntity", b =>
                {
                    b.Navigation("UserAnimals");
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.FoodEntity", b =>
                {
                    b.Navigation("UserFoods");
                });

            modelBuilder.Entity("VirtualPets2.Server.Models.UserEntity", b =>
                {
                    b.Navigation("UserAnimals");

                    b.Navigation("UserFoods");
                });
#pragma warning restore 612, 618
        }
    }
}
